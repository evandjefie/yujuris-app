import { useState, useCallback, useEffect } from 'react';
import { ChatMessage, LegalSource } from '../types';
import { useAuth } from './useAuth';
import { useLegalSearch } from './useLegalSearch';
import { supabase } from '../lib/supabase';

export const useChat = () => {
  const [messages, setMessages] = useState<ChatMessage[]>([]);
  const [isTyping, setIsTyping] = useState(false);
  const [isLoading, setIsLoading] = useState(true);
  const [currentConversationId, setCurrentConversationId] = useState<string | null>(null);
  const { user, decrementQueries } = useAuth();
  const { searchLegal, isSearching } = useLegalSearch();

  // Load conversations when user is available
  useEffect(() => {
    if (user) {
      loadOrCreateConversation();
    } else {
      // Show welcome message for non-authenticated users
      setMessages([getWelcomeMessage()]);
      setIsLoading(false);
    }
  }, [user]);

  const getWelcomeMessage = (): ChatMessage => ({
    id: '1',
    content: 'Bonjour ! Je suis votre assistant juridique sp√©cialis√© en droit OHADA et droit ivoirien. Je peux vous aider avec :\n\n‚Ä¢ Questions sur le droit des soci√©t√©s commerciales\n‚Ä¢ Proc√©dures civiles et commerciales\n‚Ä¢ Droit du travail dans l\'espace OHADA\n‚Ä¢ R√©daction de contrats et documents juridiques\n‚Ä¢ Interpr√©tation des textes OHADA et du droit ivoirien\n\nMes r√©ponses sont bas√©es sur des recherches en temps r√©el dans la biblioth√®que CNDJ et les sources officielles OHADA.\n\nComment puis-je vous assister aujourd\'hui ?',
    sender: 'assistant',
    timestamp: new Date()
  });

  const loadOrCreateConversation = async () => {
    if (!user) return;

    try {
      setIsLoading(true);

      // Try to get the most recent conversation
      const { data: conversations, error: convError } = await supabase
        .from('chat_conversations')
        .select('id, title, last_message_at')
        .eq('user_id', user.id)
        .eq('is_archived', false)
        .order('last_message_at', { ascending: false })
        .limit(1);

      if (convError) {
        console.error('Error loading conversations:', convError);
        setMessages([getWelcomeMessage()]);
        setIsLoading(false);
        return;
      }

      let conversationId: string;

      if (conversations && conversations.length > 0) {
        // Use existing conversation
        conversationId = conversations[0].id;
        setCurrentConversationId(conversationId);

        // Load messages from this conversation
        const { data: chatMessages, error: msgError } = await supabase
          .from('chat_messages')
          .select('*')
          .eq('conversation_id', conversationId)
          .order('created_at', { ascending: true });

        if (msgError) {
          console.error('Error loading messages:', msgError);
          setMessages([getWelcomeMessage()]);
        } else if (chatMessages && chatMessages.length > 0) {
          // Convert database messages to ChatMessage format
          const formattedMessages: ChatMessage[] = chatMessages.map(msg => ({
            id: msg.id,
            content: msg.content,
            sender: msg.role as 'user' | 'assistant',
            timestamp: new Date(msg.created_at),
            sources: msg.metadata?.sources || []
          }));
          setMessages(formattedMessages);
        } else {
          // Conversation exists but no messages, add welcome message
          setMessages([getWelcomeMessage()]);
        }
      } else {
        // Create new conversation
        const { data: newConv, error: createError } = await supabase
          .from('chat_conversations')
          .insert({
            user_id: user.id,
            title: 'Nouvelle conversation',
            description: 'Consultation juridique OHADA'
          })
          .select()
          .single();

        if (createError) {
          console.error('Error creating conversation:', createError);
          setMessages([getWelcomeMessage()]);
        } else {
          conversationId = newConv.id;
          setCurrentConversationId(conversationId);
          
          // Add welcome message to new conversation
          const welcomeMessage = getWelcomeMessage();
          setMessages([welcomeMessage]);
          
          // Save welcome message to database
          await saveMessageToDatabase(welcomeMessage, conversationId);
        }
      }
    } catch (error) {
      console.error('Error in loadOrCreateConversation:', error);
      setMessages([getWelcomeMessage()]);
    } finally {
      setIsLoading(false);
    }
  };

  const saveMessageToDatabase = async (message: ChatMessage, conversationId: string) => {
    if (!user || !conversationId) return;

    try {
      const { error } = await supabase
        .from('chat_messages')
        .insert({
          conversation_id: conversationId,
          user_id: user.id,
          role: message.sender,
          content: message.content,
          metadata: {
            sources: message.sources || []
          }
        });

      if (error) {
        console.error('Error saving message:', error);
      }

      // Update conversation last_message_at
      await supabase
        .from('chat_conversations')
        .update({ last_message_at: new Date().toISOString() })
        .eq('id', conversationId);

    } catch (error) {
      console.error('Error in saveMessageToDatabase:', error);
    }
  };

  const canSendMessage = useCallback(() => {
    if (!user) return false;
    if (user.plan === 'premium') return true;
    return (user.remainingQueries || 0) > 0;
  }, [user]);

  const sendMessage = useCallback(async (content: string) => {
    if (!canSendMessage() || !user) return false;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      content,
      sender: 'user',
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setIsTyping(true);

    // Save user message to database
    if (currentConversationId) {
      await saveMessageToDatabase(userMessage, currentConversationId);
    }

    try {
      // Use the legal search function with Gemini AI
      const searchResult = await searchLegal({
        query: content,
        country: 'CI', // Default to C√¥te d'Ivoire
        domain: 'general',
        language: 'fr'
      });

      let assistantContent: string;
      let sources: LegalSource[] = [];

      if (searchResult) {
        assistantContent = searchResult.answer;
        sources = searchResult.sources;
      } else {
        // Fallback to enhanced mock response
        assistantContent = generateEnhancedResponse(content);
        sources = generateMockSources();
      }

      const assistantMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        content: assistantContent,
        sender: 'assistant',
        timestamp: new Date(),
        sources: sources
      };

      setMessages(prev => [...prev, assistantMessage]);

      // Save assistant message to database
      if (currentConversationId) {
        await saveMessageToDatabase(assistantMessage, currentConversationId);
      }

      // Decrease remaining queries for free users using Supabase
      if (user && user.plan === 'free') {
        await decrementQueries();
      }

    } catch (error) {
      console.error('Erreur lors de l\'envoi du message:', error);
      
      // Fallback message in case of error
      const errorMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        content: 'Je rencontre actuellement des difficult√©s techniques. Veuillez r√©essayer dans quelques instants. En attendant, voici une r√©ponse bas√©e sur mes connaissances g√©n√©rales du droit OHADA :\n\n' + generateEnhancedResponse(content),
        sender: 'assistant',
        timestamp: new Date(),
        sources: generateMockSources()
      };

      setMessages(prev => [...prev, errorMessage]);

      // Save error message to database
      if (currentConversationId) {
        await saveMessageToDatabase(errorMessage, currentConversationId);
      }
    } finally {
      setIsTyping(false);
    }

    return true;
  }, [canSendMessage, user, currentConversationId, searchLegal, decrementQueries]);

  const clearChat = useCallback(async () => {
    if (!user) {
      setMessages([getWelcomeMessage()]);
      return;
    }

    try {
      // Create new conversation
      const { data: newConv, error } = await supabase
        .from('chat_conversations')
        .insert({
          user_id: user.id,
          title: 'Nouvelle conversation',
          description: 'Consultation juridique OHADA'
        })
        .select()
        .single();

      if (error) {
        console.error('Error creating new conversation:', error);
        return;
      }

      setCurrentConversationId(newConv.id);
      const welcomeMessage = getWelcomeMessage();
      setMessages([welcomeMessage]);
      
      // Save welcome message to new conversation
      await saveMessageToDatabase(welcomeMessage, newConv.id);

    } catch (error) {
      console.error('Error in clearChat:', error);
    }
  }, [user]);

  return {
    messages,
    isTyping: isTyping || isSearching,
    isLoading,
    canSendMessage: canSendMessage(),
    sendMessage,
    clearChat
  };
};

const generateEnhancedResponse = (query: string): string => {
  const lowerQuery = query.toLowerCase();
  
  if (lowerQuery.includes('soci√©t√©') || lowerQuery.includes('sarl') || lowerQuery.includes('sa ') || lowerQuery.includes('cr√©er')) {
    return `**Cr√©ation de soci√©t√© en C√¥te d'Ivoire selon le droit OHADA**

Selon l'Acte uniforme relatif au droit des soci√©t√©s commerciales et du GIE, et le droit ivoirien, voici les √©tapes essentielles :

**üìã Conditions pr√©alables :**
‚Ä¢ Capital social minimum : 1 000 000 FCFA pour une SA, 100 000 FCFA pour une SARL
‚Ä¢ Au moins 2 associ√©s pour une SARL, 3 actionnaires pour une SA
‚Ä¢ Si√®ge social en C√¥te d'Ivoire ou dans un √âtat partie OHADA

**üìù Proc√©dure de constitution :**
1. **R√©daction des statuts** conform√©ment aux articles 5 √† 15 de l'AUDSCGIE
2. **D√©p√¥t du capital** dans une banque agr√©√©e en C√¥te d'Ivoire
3. **Immatriculation** au Registre du Commerce et du Cr√©dit Mobilier (RCCM) - CEPICI
4. **Publication** dans Fraternit√© Matin (journal d'annonces l√©gales)
5. **D√©claration fiscale** aupr√®s de la DGI

**‚öñÔ∏è Sp√©cificit√©s ivoiriennes :**
‚Ä¢ Passage obligatoire par le CEPICI (Centre de Promotion des Investissements)
‚Ä¢ Obtention du Num√©ro de Compte Contribuable (NCC)
‚Ä¢ Inscription √† la CNPS pour les salari√©s

**üí° Conseil pratique :**
Le processus peut √™tre acc√©l√©r√© via le guichet unique du CEPICI qui centralise toutes les formalit√©s.

Souhaitez-vous des pr√©cisions sur un aspect particulier ?`;
  }
  
  return `**Analyse juridique - Droit OHADA et ivoirien**

Concernant votre question "${query.substring(0, 100)}${query.length > 100 ? '...' : ''}", voici les √©l√©ments juridiques pertinents :

**üèõÔ∏è Cadre l√©gal applicable :**
Les dispositions OHADA et le droit ivoirien √©tablissent un cadre juridique harmonis√©. Dans votre situation, plusieurs textes peuvent s'appliquer selon le contexte sp√©cifique.

**üìö Sources principales :**
‚Ä¢ **Actes uniformes OHADA** : Pr√©valent sur les l√©gislations nationales
‚Ä¢ **Code civil ivoirien** : Pour les aspects non couverts par OHADA
‚Ä¢ **Jurisprudence CCJA** : Interpr√©tation uniforme du droit OHADA

**‚öñÔ∏è Recommandations pratiques :**
1. **V√©rification de conformit√©** avec les textes OHADA et ivoiriens
2. **Documentation appropri√©e** selon les standards CEPICI
3. **Respect des proc√©dures** √©tablies par les actes uniformes
4. **Consultation d'un juriste** pour les cas complexes

Pour une analyse plus approfondie, n'h√©sitez pas √† pr√©ciser le contexte sp√©cifique de votre situation.`;
};

const generateMockSources = (): LegalSource[] => [
  {
    title: 'Acte uniforme relatif au droit des soci√©t√©s commerciales et du GIE',
    article: 'Article 15',
    code: 'OHADA - AUDSCGIE',
    url: 'https://ohada.org/audscgie/article-15',
    excerpt: 'Les soci√©t√©s commerciales jouissent de la personnalit√© morale √† compter de leur immatriculation...',
    relevance: 0.95
  },
  {
    title: 'Code des investissements de C√¥te d\'Ivoire',
    article: 'Article 23',
    code: 'Loi n¬∞2012-487',
    url: 'https://biblio.cndj.ci/code-investissements',
    excerpt: 'Les entreprises cr√©√©es b√©n√©ficient d\'avantages fiscaux selon leur secteur d\'activit√©...',
    relevance: 0.88
  },
  {
    title: 'Jurisprudence CCJA - Cr√©ation de soci√©t√©s',
    article: 'Arr√™t n¬∞045/2023',
    code: 'CCJA',
    url: 'https://ccja.int/jurisprudence/045-2023',
    excerpt: 'La Cour rappelle que l\'immatriculation au RCCM est constitutive de la personnalit√© morale...',
    relevance: 0.82
  }
];